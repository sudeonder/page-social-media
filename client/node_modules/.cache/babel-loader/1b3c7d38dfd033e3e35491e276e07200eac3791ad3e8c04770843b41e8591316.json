{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  posts: []\n};\n\n// reducers are functions that take the current state and an action,\n// and return a new state\n\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {}\n});\nexport const incrementAsync = createAsyncThunk(\"counter/incrementAsync\", async amount => {\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  return amount;\n});\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","posts","postsSlice","name","reducers","incrementAsync","createAsyncThunk","amount","Promise","resolve","setTimeout","reducer"],"sources":["/Users/sudeonder/Desktop/mern-stack/pages-project/client/src/state/posts/postsSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  posts: [],\n};\n\n// reducers are functions that take the current state and an action,\n// and return a new state\n\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {},\n});\n\nexport const incrementAsync = createAsyncThunk(\n  \"counter/incrementAsync\",\n  async (amount: number) => {\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    return amount;\n  }\n);\n\nexport default postsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;;AAED;AACA;;AAEA,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC7BI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE,CAAC;AACb,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGC,gBAAgB,CAC5C,wBAAwB,EACxB,MAAOC,MAAc,IAAK;EACxB,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;EACzD,OAAOF,MAAM;AACf,CACF,CAAC;AAED,eAAeL,UAAU,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
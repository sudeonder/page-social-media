{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  posts: []\n};\n\n// reducers are functions that take the current state and an action,\n// and return a new state\n\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    fetchPosts: (state, action) => {\n      // Assuming action.payload contains the fetched posts\n      state.posts = action.payload;\n    },\n    createPosts: (state, action) => {\n      // Assuming action.payload contains the new post\n      state.posts.push(action.payload);\n    }\n  }\n});\nexport const {\n  fetchPosts,\n  createPosts\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","posts","postsSlice","name","reducers","fetchPosts","state","action","payload","createPosts","push","actions","reducer"],"sources":["/Users/sudeonder/Desktop/mern-stack/pages-project/client/src/state/posts/postsSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  posts: [],\n};\n\n// reducers are functions that take the current state and an action,\n// and return a new state\n\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    fetchPosts: (state, action) => {\n      // Assuming action.payload contains the fetched posts\n      state.posts = action.payload;\n    },\n    createPosts: (state, action) => {\n      // Assuming action.payload contains the new post\n      state.posts.push(action.payload);\n    },\n  },\n});\n\nexport const { fetchPosts, createPosts } = postsSlice.actions;\n\nexport default postsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;;AAED;AACA;;AAEA,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC7BI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7B;MACAD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDC,WAAW,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC9B;MACAD,KAAK,CAACL,KAAK,CAACS,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAClC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,UAAU;EAAEI;AAAY,CAAC,GAAGP,UAAU,CAACS,OAAO;AAE7D,eAAeT,UAAU,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}